- name: Checking TRIM Status
  ansible.builtin.command: fstrim -nv /
  changed_when: false
  register: trim_status

- name: Setup SSD TRIM
  when: "'not supported' in trim_status.stdout"
  # when: trim_status.stdout | regex_search('not supported', multiline=True, ignorecase=True)
  block:
    - name: Getting root Filesystem Disk
      ansible.builtin.shell: |
        set -o pipefail
        findmnt --mountpoint / --output SOURCE | sed -e '1d' -e 's/\/dev\///g' -e 's/[0-9]*//g'
      args:
        executable: /usr/bin/bash
      changed_when: false
      register: disk

    - name: Getting Maximum Unmap LBA Count
      ansible.builtin.shell: |
        set -o pipefail
        sg_vpd -p bl $(lsblk -d -o name,rota -np | grep -v 1 | grep {{ disk.stdout }} | cut -d ' ' -f1) | grep 'Maximum unmap LBA count' | cut -d ' ' -f7
      args:
        executable: /usr/bin/bash
      changed_when: false
      register: maximum_unmap_lba_count

    - name: Getting Unmap Command Support
      ansible.builtin.shell: |
        set -o pipefail
        sg_vpd -p lbpv $(lsblk -d -o name,rota -np | grep -v 1 | grep {{ disk.stdout }} | cut -d ' ' -f1) | grep 'Unmap command supported (LBPU)' | cut -d ' ' -f7
      args:
        executable: /usr/bin/bash
      changed_when: false
      register: unmap_command_support

    - name: Getting USB Host
      ansible.builtin.shell: |
        set -o pipefail
        lsscsi -t | grep {{ disk.stdout }} | cut -d ' ' -f1 | sed -e 's/\[//g' -e 's/\]//g'
      args:
        executable: /usr/bin/bash
      changed_when: false
      register: disk_usb_host

    - name: Getting Provisioning Mode
      ansible.builtin.shell: |
        set -o pipefail
        find /sys/ -name provisioning_mode -exec grep -H . {} + | grep {{ disk_usb_host.stdout }}
      args:
        executable: /usr/bin/bash
      changed_when: false
      register: disk_provisioning_mode

    - name: Enabling TRIM if Supported
      ansible.builtin.lineinfile:
        state: present
        path: "{{ disk_provisioning_mode.stdout | regex_replace(':[a-z]+$') }}"
        line: unmap
      when: maximum_unmap_lba_count.stdout | int > 0 and unmap_command_support.stdout | int == 1

    - name: Getting Disk Vendor
      ansible.builtin.shell: |
        set -o pipefail
        lsscsi | grep "{{ disk_usb_host.stdout }}" | cut -d " " -f 9
      args:
        executable: /usr/bin/bash
      changed_when: false
      register: disk_vendor

    - name: Getting Disk Vendor ID
      ansible.builtin.shell: |
        set -o pipefail
        lsusb | grep  {{ disk_vendor.stdout }} | cut -d " " -f6 | sed 's/:.*//g'
      args:
        executable: /usr/bin/bash
      changed_when: false
      register: disk_vendor_id

    - name: Getting Disk Product ID
      ansible.builtin.shell: |
        set -o pipefail
        lsusb | grep  {{ disk_vendor.stdout }} | cut -d " " -f6 | sed 's/.*://g'
      args:
        executable: /usr/bin/bash
      changed_when: false
      register: disk_product_id

    - name: Adding udev TRIM Configuration
      ansible.builtin.template:
        src: templates/trim.rules.j2
        dest: /etc/udev/rules.d/10-trim.rules
        owner: root
        group: root
        mode: 0644
        backup: true

    - name: Running Initial TRIM
      ansible.builtin.command: fstrim -v /
      when: maximum_unmap_lba_count.stdout | int > 0 and unmap_command_support.stdout | int == 1
  notify: Enable TRIM Timer Service
